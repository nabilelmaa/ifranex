datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  profilePicture String
  username       String    @unique
  email          String    @unique
  password       String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  bookings       Booking[] @relation("CustomerBookings")
  reviews        Review[]
}

model Booking {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  address     String
  timing      DateTime
  phoneNumber String
  details     String
  status      BookingStatus @default(Pending)
  createdAt   DateTime      @default(now())
  customer    User          @relation("CustomerBookings", fields: [customerId], references: [id])
  customerId  String        @db.ObjectId
  service     Service       @relation("ServiceBookings", fields: [serviceId], references: [id])
  serviceId   String        @db.ObjectId
}

model Service {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  banner         String
  pricePerHour   Float
  category       String
  title_en       String
  description_en String
  title_fr       String
  description_fr String
  hidden         Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  bookings       Booking[] @relation("ServiceBookings")
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  rating    Int
  comment   String
  timestamp DateTime @default(now())
}

enum BookingStatus {
  Pending
  Confirmed
  Canceled
  Completed
}

model VerificationCode {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  code      String
  createdAt DateTime @default(now())
}
